version: "2"

services:
  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - pipeline-network
  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_MESSAGE_MAX_BYTES=20000000
    networks:
      - pipeline-network
    depends_on:
      - zookeeper

  kafka-ui:
    restart: always
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8083:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=hacknroll2025
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - pipeline-network
    depends_on:
      - kafka

  sqliteweb:
    restart: always
    image: tomdesinto/sqliteweb
    ports:
      - "8082:8080"
    volumes:
      - './db:/db'
    command: HacknRoll2025.db

  mysterypictureapi:
    restart: always
    build:
      dockerfile: ./api.dockerfile
    ports:
      - "9999:8080"

volumes:
  kafka-volume:
  zookeeper-volume:

networks:
  pipeline-network: {}

